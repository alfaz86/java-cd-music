/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.main.program;

import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ujang
 */
public class CDMusic extends javax.swing.JFrame {
    
    private void blank_form(){
        InputId.setText(null);
        InputTitle.setText(null);
        InputArtist.setText(null);
        InputPrice.setText(null);
    }
    
    private void show_data(){
        
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No.");
        model.addColumn("ID");
        model.addColumn("Judul");
        model.addColumn("Artis");
        model.addColumn("Harga");
        
        try {
            int no = 1;
            String sql = "SELECT * FROM cd_music";
            java.sql.Connection conn    = (Connection)Config.configDB();
            java.sql.Statement stm      = conn.createStatement();
            java.sql.ResultSet res      = stm.executeQuery(sql);
            
            while(res.next()){
                model.addRow(new Object[]{
                    no++,
                    res.getString(1),
                    res.getString(2),
                    res.getString(3),
                    res.getString(4),
                });
            }
            
            TableCdMusic.setModel(model);
            TableCdMusic.setRowHeight(50);
            TableCdMusic.getColumnModel().getColumn(0).setMaxWidth(40);
            TableCdMusic.getColumnModel().getColumn(1).setMaxWidth(40);
        } catch (SQLException e) {
            System.out.println("Error : " + e.getMessage());
        }
        
    }

    /**
     * Creates new form CDMusic
     */
    public CDMusic() {
        initComponents();
        show_data();
        setResizable(false);
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelCDMusic = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        TitleCDMusic = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        InputTitle = new javax.swing.JTextField();
        InputArtist = new javax.swing.JTextField();
        InputPrice = new javax.swing.JTextField();
        BtnAdd = new javax.swing.JButton();
        BtnReset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableCdMusic = new javax.swing.JTable();
        BtnUpdate = new javax.swing.JButton();
        BtnDelete = new javax.swing.JButton();
        InputId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBack.setText("Kembali");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        TitleCDMusic.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        TitleCDMusic.setText("Data CD Music");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Judul");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Artis");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Harga");

        InputTitle.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        InputTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputTitleActionPerformed(evt);
            }
        });

        InputArtist.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        InputPrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        BtnAdd.setText("Tambah");
        BtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddActionPerformed(evt);
            }
        });

        BtnReset.setText("Reset");
        BtnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnResetActionPerformed(evt);
            }
        });

        TableCdMusic.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No", "ID", "Judul", "Artis", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableCdMusic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableCdMusicMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableCdMusic);

        BtnUpdate.setText("Update");
        BtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnUpdateActionPerformed(evt);
            }
        });

        BtnDelete.setText("Delete");
        BtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDeleteActionPerformed(evt);
            }
        });

        InputId.setUI(null);

        javax.swing.GroupLayout PanelCDMusicLayout = new javax.swing.GroupLayout(PanelCDMusic);
        PanelCDMusic.setLayout(PanelCDMusicLayout);
        PanelCDMusicLayout.setHorizontalGroup(
            PanelCDMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCDMusicLayout.createSequentialGroup()
                .addGroup(PanelCDMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelCDMusicLayout.createSequentialGroup()
                        .addGroup(PanelCDMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelCDMusicLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnBack))
                            .addGroup(PanelCDMusicLayout.createSequentialGroup()
                                .addGap(178, 178, 178)
                                .addGroup(PanelCDMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(75, 75, 75)
                                .addGroup(PanelCDMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TitleCDMusic)
                                    .addComponent(InputTitle)
                                    .addComponent(InputArtist)
                                    .addComponent(InputPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCDMusicLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(InputId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BtnReset)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BtnAdd)))
                        .addGap(0, 189, Short.MAX_VALUE))
                    .addGroup(PanelCDMusicLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(PanelCDMusicLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnDelete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelCDMusicLayout.setVerticalGroup(
            PanelCDMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCDMusicLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addGap(31, 31, 31)
                .addComponent(TitleCDMusic)
                .addGap(18, 18, 18)
                .addGroup(PanelCDMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(InputTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelCDMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(InputArtist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelCDMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(InputPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelCDMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnAdd)
                    .addComponent(BtnReset)
                    .addComponent(InputId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(PanelCDMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnUpdate)
                    .addComponent(BtnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelCDMusic, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelCDMusic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        new MainMenu().show();
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void InputTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputTitleActionPerformed

    private void BtnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnResetActionPerformed
        blank_form();
    }//GEN-LAST:event_BtnResetActionPerformed

    private void BtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAddActionPerformed
        try {
            String id       = InputId.getText();
            String title    = InputTitle.getText();
            String artist   = InputArtist.getText();
            String price    = InputPrice.getText();
            
            if(!title.isEmpty() && !artist.isEmpty() && !price.isEmpty()){
                String sql = "INSERT INTO cd_music SET title='"+title+"', artist='"+artist+"', price='"+price+"'";
                java.sql.Connection conn        = (Connection)Config.configDB();
                java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
                pstm.execute();

                JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan..!");
                show_data();
                blank_form();
            } else {
                JOptionPane.showMessageDialog(null, "Input tidak boleh kosong!");
            }
            
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_BtnAddActionPerformed

    private void TableCdMusicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableCdMusicMouseClicked
        int row         = TableCdMusic.rowAtPoint(evt.getPoint());
        
        String id       = TableCdMusic.getValueAt(row, 1).toString();
        InputId.setText(id);
        
        String title    = TableCdMusic.getValueAt(row, 2).toString();
        InputTitle.setText(title);
        
        String artist   = TableCdMusic.getValueAt(row, 3).toString();
        InputArtist.setText(artist);
        
        String price    = TableCdMusic.getValueAt(row, 4).toString();
        InputPrice.setText(price);
    }//GEN-LAST:event_TableCdMusicMouseClicked

    private void BtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnUpdateActionPerformed
        try {
            String id       = InputId.getText();
            String title    = InputTitle.getText();
            String artist   = InputArtist.getText();
            String price    = InputPrice.getText();
            
            if(!id.isEmpty()){
                String sql = "UPDATE cd_music SET title='"+title+"', artist='"+artist+"', price='"+price+"' WHERE id='"+id+"'";
                java.sql.Connection conn        = (Connection)Config.configDB();
                java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
                pstm.execute();

                JOptionPane.showMessageDialog(null, "Data berhasil diupdate..!");
                show_data();
                blank_form();
            } else {
                JOptionPane.showMessageDialog(null, "Data belum dipilih!");
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_BtnUpdateActionPerformed

    private void BtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDeleteActionPerformed
        try {
            String id = InputId.getText();
            
            if(!id.isEmpty()){
                String sql = "DELETE FROM cd_music WHERE id='"+id+"'";
                java.sql.Connection conn        = (Connection)Config.configDB();
                java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
                pstm.execute();

                JOptionPane.showMessageDialog(null, "Data berhasil dihapus..!");
                show_data();
                blank_form();
            } else {
                JOptionPane.showMessageDialog(null, "Data belum dipilih!");
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_BtnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CDMusic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CDMusic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CDMusic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CDMusic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CDMusic().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAdd;
    private javax.swing.JButton BtnDelete;
    private javax.swing.JButton BtnReset;
    private javax.swing.JButton BtnUpdate;
    private javax.swing.JTextField InputArtist;
    private javax.swing.JTextField InputId;
    private javax.swing.JTextField InputPrice;
    private javax.swing.JTextField InputTitle;
    private javax.swing.JPanel PanelCDMusic;
    private javax.swing.JTable TableCdMusic;
    private javax.swing.JLabel TitleCDMusic;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
